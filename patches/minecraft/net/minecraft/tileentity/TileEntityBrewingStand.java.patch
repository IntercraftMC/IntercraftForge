--- ../src-base/minecraft/net/minecraft/tileentity/TileEntityBrewingStand.java
+++ ../src-work/minecraft/net/minecraft/tileentity/TileEntityBrewingStand.java
@@ -1,6 +1,8 @@
 package net.minecraft.tileentity;
 
 import java.util.Arrays;
+
+import carpet.helpers.TileEntityOptimizer.ILazyTileEntity;
 import net.minecraft.block.BlockBrewingStand;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.entity.player.EntityPlayer;
@@ -23,7 +25,7 @@
 import net.minecraft.util.datafix.walkers.ItemStackDataLists;
 import net.minecraft.util.math.BlockPos;
 
-public class TileEntityBrewingStand extends TileEntityLockable implements ITickable, ISidedInventory
+public class TileEntityBrewingStand extends TileEntityLockable implements ITickable, ISidedInventory, ILazyTileEntity
 {
     private static final int[] field_145941_a = new int[] {3};
     private static final int[] field_184277_f = new int[] {0, 1, 2, 3};
@@ -35,6 +37,9 @@
     private String field_145942_n;
     private int field_184278_m;
 
+    // CARPET-optimizedTileEntities
+    private boolean isSleeping = false;
+
     public String func_70005_c_()
     {
         return this.func_145818_k_() ? this.field_145942_n : "container.brewing";
@@ -70,6 +75,11 @@
 
     public void func_73660_a()
     {
+        // CARPET-optimizedTileEntities: Skip the update if sleeping
+        if (this.field_145850_b.func_82736_K().func_82766_b("optimizeTileEntities") && this.isSleeping) {
+            return;
+        }
+
         ItemStack itemstack = this.field_145945_j.get(4);
 
         if (this.field_184278_m <= 0 && itemstack.func_77973_b() == Items.field_151065_br)
@@ -134,6 +144,11 @@
                 this.field_145850_b.func_180501_a(this.field_174879_c, iblockstate, 2);
             }
         }
+
+        // CARPET-optimizedTileEntities: Fall asleep if not brewing
+        if (this.field_145946_k == 0) {
+            this.isSleeping = true;
+        }
     }
 
     public boolean[] func_174902_m()
@@ -153,6 +168,7 @@
 
     private boolean func_145934_k()
     {
+        if (1 == 1) return net.minecraftforge.common.brewing.BrewingRecipeRegistry.canBrew(field_145945_j, field_145945_j.get(3), field_145947_i); // divert to VanillaBrewingRegistry
         ItemStack itemstack = this.field_145945_j.get(3);
 
         if (itemstack.func_190926_b())
@@ -181,19 +197,17 @@
 
     private void func_145940_l()
     {
+        if (net.minecraftforge.event.ForgeEventFactory.onPotionAttemptBrew(field_145945_j)) return;
         ItemStack itemstack = this.field_145945_j.get(3);
 
-        for (int i = 0; i < 3; ++i)
-        {
-            this.field_145945_j.set(i, PotionHelper.func_185212_d(itemstack, this.field_145945_j.get(i)));
-        }
+        net.minecraftforge.common.brewing.BrewingRecipeRegistry.brewPotions(field_145945_j, field_145945_j.get(3), field_145947_i);
 
         itemstack.func_190918_g(1);
         BlockPos blockpos = this.func_174877_v();
 
-        if (itemstack.func_77973_b().func_77634_r())
+        if (itemstack.func_77973_b().hasContainerItem(itemstack))
         {
-            ItemStack itemstack1 = new ItemStack(itemstack.func_77973_b().func_77668_q());
+            ItemStack itemstack1 = itemstack.func_77973_b().getContainerItem(itemstack);
 
             if (itemstack.func_190926_b())
             {
@@ -207,6 +221,7 @@
 
         this.field_145945_j.set(3, itemstack);
         this.field_145850_b.func_175718_b(1035, blockpos, 0);
+        net.minecraftforge.event.ForgeEventFactory.onPotionBrewed(field_145945_j);
     }
 
     public static void func_189675_a(DataFixer p_189675_0_)
@@ -296,7 +311,7 @@
     {
         if (p_94041_1_ == 3)
         {
-            return PotionHelper.func_185205_a(p_94041_2_);
+            return net.minecraftforge.common.brewing.BrewingRecipeRegistry.isValidIngredient(p_94041_2_);
         }
         else
         {
@@ -308,7 +323,7 @@
             }
             else
             {
-                return (item == Items.field_151068_bn || item == Items.field_185155_bH || item == Items.field_185156_bI || item == Items.field_151069_bo) && this.func_70301_a(p_94041_1_).func_190926_b();
+                return net.minecraftforge.common.brewing.BrewingRecipeRegistry.isValidInput(p_94041_2_) && this.func_70301_a(p_94041_1_).func_190926_b();
             }
         }
     }
@@ -377,6 +392,27 @@
         }
     }
 
+    net.minecraftforge.items.IItemHandler handlerInput = new net.minecraftforge.items.wrapper.SidedInvWrapper(this, net.minecraft.util.EnumFacing.UP);
+    net.minecraftforge.items.IItemHandler handlerOutput = new net.minecraftforge.items.wrapper.SidedInvWrapper(this, net.minecraft.util.EnumFacing.DOWN);
+    net.minecraftforge.items.IItemHandler handlerSides = new net.minecraftforge.items.wrapper.SidedInvWrapper(this, net.minecraft.util.EnumFacing.NORTH);
+
+    @SuppressWarnings("unchecked")
+    @Override
+    @javax.annotation.Nullable
+    public <T> T getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @javax.annotation.Nullable net.minecraft.util.EnumFacing facing)
+    {
+        if (facing != null && capability == net.minecraftforge.items.CapabilityItemHandler.ITEM_HANDLER_CAPABILITY)
+        {
+            if (facing == EnumFacing.UP)
+                return (T) handlerInput;
+            else if (facing == EnumFacing.DOWN)
+                return (T) handlerOutput;
+            else
+                return (T) handlerSides;
+        }
+        return super.getCapability(capability, facing);
+    }
+
     public int func_174890_g()
     {
         return 2;
@@ -386,4 +422,11 @@
     {
         this.field_145945_j.clear();
     }
+
+    // CARPET-optimizedTileEntities
+    @Override
+    public void wakeUp()
+    {
+        this.isSleeping = false;
+    }
 }
